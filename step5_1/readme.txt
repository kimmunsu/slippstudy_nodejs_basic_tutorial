지금까지 우린 웹서버를 직접 구현하였다.
그러면서 직접 작업해야하는 제반되는 작업이 많다는 것을 느낄 수 있었을 것이다.
심지어 우린 아직 http method 구분도 해보지 않았으며 디자이너나 웹퍼블리셔로부터 저주받을 작업만 벌이고 있었다.
앞으로 진행할 5스텝에서 우린 이러한 저차원적인 작업들로 스트레스 받지 않고 빠르게 웹개발을 하고 디자이너나 웹퍼블리셔와 친하게 작업할 수 있도록 프레임워크를 도입해보자.
nodejs 에는 많은 웹개발 프레임워크가 있는데, 그 중 express 를 사용해보자.
express 설치는 여러 방법이 있겠지만, windows 의 커맨드창을 이용하여 진행할 것이며 아래에서 그에 대해 안내할 것이므로 linux(unix) 사용자 들도 어렵지 않게 검색을 동반하여 따라할 수 있을 것이다.

1. 커맨드창을 실행하여(cmd.exe) 디렉토리 입력 위치를 nodejs 가 설치된 위치까지 이동시켜주자. (본인의 경우 C드라이브 바로 아래에 nodejs 라는 이름으로 설치되어있으므로 C:\nodejs 가 된다.)
2. 기존에 노드가 설치되면서 nodejs 모듈 관리 등을 도와주는 npm 도 설치되어있음을 디렉토리 확인 명령어로 확인해보자. (windows : dir, linux : ls -l)
3. npm 이 설치되어있음을 확인하였을 것이다.
4. 커맨드 창에 npm install -g express-generator 를 입력해준다. (express 를 환경설정 잡아주는 귀찮은 일을 제거하면서, 또한 기본 웹서버 프로젝트를 쉽게 생성하기 위함으로 -g -generator 를 붙여주었다. 이렇게 설치함은 step5_2에서 그 편리성을 확인할 수 있다.)
5. 설치가 진행될 것이고, 설치가 완료되면 express 를 require 하고, http get method 에 대해 hello world 를 response 하게끔 해주어 8888번 포트로 listen 하게 해주자.
6. 커맨드창을 이용하여 server를 실행해주자. (본인은 server.js 라는 파일 이름으로 작성하였으며 node server.js 로 서버를 실행했다.)

그리고 브라우저에서 http://localhost/8888 을 입력하면 hello world 를 다시 또 보게 될 것이다.
